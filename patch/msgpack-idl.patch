--- src/main/java/Tuple.java	2013-03-06 11:58:28.564767001 +0900
+++ src/main/java/Tuple.java	1970-01-01 09:00:00.000000000 +0900
@@ -1,12 +0,0 @@
-
-// This file is auto-generated from stat.idl
-// *** DO NOT EDIT ***
-
-
-package us.jubat.stat;
-public class Tuple<T, U> {
-  public T a;
-  public U b;
-};
-
-
--- src/main/java/us/jubat/anomaly/AnomalyClient.java	2013-03-06 11:58:28.508767001 +0900
+++ src/main/java/us/jubat/anomaly/AnomalyClient.java	2013-03-06 11:59:20.080767001 +0900
@@ -5,8 +5,8 @@
 
 package us.jubat.anomaly;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
 
@@ -14,20 +14,21 @@
   public AnomalyClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
   public static interface RPCInterface {
     String get_config(String name);
     boolean clear_row(String name, String id);
-    Tuple<String, Float > add(String name, Datum  row);
+    TupleStringFloat add(String name, Datum  row);
     float update(String name, String id, Datum  row);
     boolean clear(String name);
     float calc_score(String name, Datum  row);
-    ArrayList<String > get_all_rows(String name);
+    List<String > get_all_rows(String name);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
 
   }
 
@@ -40,7 +41,7 @@
     return iface_.clear_row(name, id);
   }
 
-  public Tuple<String, Float > add(String name, Datum  row) {
+  public TupleStringFloat add(String name, Datum  row) {
     return iface_.add(name, row);
   }
 
@@ -56,7 +57,7 @@
     return iface_.calc_score(name, row);
   }
 
-  public ArrayList<String > get_all_rows(String name) {
+  public List<String > get_all_rows(String name) {
     return iface_.get_all_rows(name);
   }
 
@@ -68,7 +69,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
--- src/main/java/us/jubat/anomaly/Datum.java	2013-03-06 11:58:28.508767001 +0900
+++ src/main/java/us/jubat/anomaly/Datum.java	2013-03-06 11:59:20.080767001 +0900
@@ -6,15 +6,15 @@
 package us.jubat.anomaly;
 
 
-import java.util.ArrayList;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class Datum  {
 
-  public ArrayList<Tuple<String, String > > string_values;
-  public ArrayList<Tuple<String, Double > > num_values;
+  public List<TupleStringString > string_values;
+  public List<TupleStringDouble > num_values;
 
   public Datum() {
   
--- src/main/java/us/jubat/anomaly/TupleStringDouble.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/anomaly/TupleStringDouble.java	2013-03-06 11:59:20.080767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from anomaly.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.anomaly;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringDouble {
+  public String first;
+  public double second;
+};
+ 
+
--- src/main/java/us/jubat/anomaly/TupleStringFloat.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/anomaly/TupleStringFloat.java	2013-03-06 11:59:20.080767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from anomaly.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.anomaly;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringFloat {
+  public String first;
+  public float second;
+};
+ 
+
--- src/main/java/us/jubat/anomaly/TupleStringString.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/anomaly/TupleStringString.java	2013-03-06 11:59:20.080767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from anomaly.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.anomaly;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringString {
+  public String first;
+  public String second;
+};
+ 
+
--- src/main/java/us/jubat/classifier/ClassifierClient.java	2013-03-06 11:58:28.516767001 +0900
+++ src/main/java/us/jubat/classifier/ClassifierClient.java	2013-03-06 11:59:20.088767001 +0900
@@ -5,8 +5,8 @@
 
 package us.jubat.classifier;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
 
@@ -14,17 +14,18 @@
   public ClassifierClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
   public static interface RPCInterface {
     String get_config(String name);
-    int train(String name, ArrayList<Tuple<String, Datum  > > data);
-    ArrayList<ArrayList<EstimateResult  > > classify(String name, ArrayList<Datum  > data);
+    int train(String name, List<TupleStringDatum > data);
+    List<List<EstimateResult  > > classify(String name, List<Datum  > data);
     boolean clear(String name);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
 
   }
 
@@ -33,11 +34,11 @@
     return iface_.get_config(name);
   }
 
-  public int train(String name, ArrayList<Tuple<String, Datum  > > data) {
+  public int train(String name, List<TupleStringDatum > data) {
     return iface_.train(name, data);
   }
 
-  public ArrayList<ArrayList<EstimateResult  > > classify(String name, ArrayList<Datum  > data) {
+  public List<List<EstimateResult  > > classify(String name, List<Datum  > data) {
     return iface_.classify(name, data);
   }
 
@@ -53,7 +54,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
--- src/main/java/us/jubat/classifier/Datum.java	2013-03-06 11:58:28.516767001 +0900
+++ src/main/java/us/jubat/classifier/Datum.java	2013-03-06 11:59:20.088767001 +0900
@@ -6,15 +6,15 @@
 package us.jubat.classifier;
 
 
-import java.util.ArrayList;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class Datum  {
 
-  public ArrayList<Tuple<String, String > > string_values;
-  public ArrayList<Tuple<String, Double > > num_values;
+  public List<TupleStringString > string_values;
+  public List<TupleStringDouble > num_values;
 
   public Datum() {
   
--- src/main/java/us/jubat/classifier/TupleStringDatum.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/classifier/TupleStringDatum.java	2013-03-06 11:59:20.088767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from classifier.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.classifier;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringDatum {
+  public String first;
+  public Datum  second;
+};
+ 
+
--- src/main/java/us/jubat/classifier/TupleStringDouble.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/classifier/TupleStringDouble.java	2013-03-06 11:59:20.088767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from classifier.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.classifier;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringDouble {
+  public String first;
+  public double second;
+};
+ 
+
--- src/main/java/us/jubat/classifier/TupleStringString.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/classifier/TupleStringString.java	2013-03-06 11:59:20.088767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from classifier.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.classifier;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringString {
+  public String first;
+  public String second;
+};
+ 
+
--- src/main/java/us/jubat/graph/Edge.java	2013-03-06 11:58:28.528767001 +0900
+++ src/main/java/us/jubat/graph/Edge.java	2013-03-06 11:59:20.100767001 +0900
@@ -5,7 +5,7 @@
 
 package us.jubat.graph;
 
-import java.util.HashMap;
+import java.util.Map;
 
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
@@ -13,7 +13,7 @@
 @Message
 public class Edge  {
 
-  public HashMap<String, String > property;
+  public Map<String, String > property;
   public String source;
   public String target;
 
--- src/main/java/us/jubat/graph/GraphClient.java	2013-03-06 11:58:28.528767001 +0900
+++ src/main/java/us/jubat/graph/GraphClient.java	2013-03-06 11:59:20.100767001 +0900
@@ -5,8 +5,8 @@
 
 package us.jubat.graph;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
 
@@ -14,6 +14,7 @@
   public GraphClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
@@ -21,7 +22,7 @@
     String get_config(String name);
     String create_node(String name);
     boolean remove_node(String name, String node_id);
-    boolean update_node(String name, String node_id, HashMap<String, String > property);
+    boolean update_node(String name, String node_id, Map<String, String > property);
     long create_edge(String name, String node_id, Edge  e);
     boolean update_edge(String name, String node_id, long edge_id, Edge  e);
     boolean remove_edge(String name, String node_id, long edge_id);
@@ -30,14 +31,14 @@
     boolean add_shortest_path_query(String name, PresetQuery  query);
     boolean remove_centrality_query(String name, PresetQuery  query);
     boolean remove_shortest_path_query(String name, PresetQuery  query);
-    ArrayList<String > get_shortest_path(String name, ShortestPathQuery  query);
+    List<String > get_shortest_path(String name, ShortestPathQuery  query);
     boolean update_index(String name);
     boolean clear(String name);
     Node  get_node(String name, String node_id);
     Edge  get_edge(String name, String node_id, long edge_id);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
     boolean create_node_here(String name, String node_id);
     boolean remove_global_node(String name, String node_id);
     boolean create_edge_here(String name, long edge_id, Edge  e);
@@ -57,7 +58,7 @@
     return iface_.remove_node(name, node_id);
   }
 
-  public boolean update_node(String name, String node_id, HashMap<String, String > property) {
+  public boolean update_node(String name, String node_id, Map<String, String > property) {
     return iface_.update_node(name, node_id, property);
   }
 
@@ -93,7 +94,7 @@
     return iface_.remove_shortest_path_query(name, query);
   }
 
-  public ArrayList<String > get_shortest_path(String name, ShortestPathQuery  query) {
+  public List<String > get_shortest_path(String name, ShortestPathQuery  query) {
     return iface_.get_shortest_path(name, query);
   }
 
@@ -121,7 +122,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
--- src/main/java/us/jubat/graph/Node.java	2013-03-06 11:58:28.528767001 +0900
+++ src/main/java/us/jubat/graph/Node.java	2013-03-06 11:59:20.100767001 +0900
@@ -5,17 +5,17 @@
 
 package us.jubat.graph;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class Node  {
 
-  public HashMap<String, String > property;
-  public ArrayList<Long > in_edges;
-  public ArrayList<Long > out_edges;
+  public Map<String, String > property;
+  public List<Long > in_edges;
+  public List<Long > out_edges;
 
   public Node() {
   
--- src/main/java/us/jubat/graph/PresetQuery.java	2013-03-06 11:58:28.528767001 +0900
+++ src/main/java/us/jubat/graph/PresetQuery.java	2013-03-06 11:59:20.100767001 +0900
@@ -6,15 +6,15 @@
 package us.jubat.graph;
 
 
-import java.util.ArrayList;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class PresetQuery  {
 
-  public ArrayList<Tuple<String, String > > edge_query;
-  public ArrayList<Tuple<String, String > > node_query;
+  public List<TupleStringString > edge_query;
+  public List<TupleStringString > node_query;
 
   public PresetQuery() {
   
--- src/main/java/us/jubat/graph/TupleStringString.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/graph/TupleStringString.java	2013-03-06 11:59:20.100767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from graph.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.graph;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringString {
+  public String first;
+  public String second;
+};
+ 
+
--- src/main/java/us/jubat/recommender/Datum.java	2013-03-06 11:58:28.544767001 +0900
+++ src/main/java/us/jubat/recommender/Datum.java	2013-03-06 11:59:20.112767001 +0900
@@ -6,15 +6,15 @@
 package us.jubat.recommender;
 
 
-import java.util.ArrayList;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class Datum  {
 
-  public ArrayList<Tuple<String, String > > string_values;
-  public ArrayList<Tuple<String, Double > > num_values;
+  public List<TupleStringString > string_values;
+  public List<TupleStringDouble > num_values;
 
   public Datum() {
   
--- src/main/java/us/jubat/recommender/RecommenderClient.java	2013-03-06 11:58:28.544767001 +0900
+++ src/main/java/us/jubat/recommender/RecommenderClient.java	2013-03-06 11:59:20.112767001 +0900
@@ -5,8 +5,8 @@
 
 package us.jubat.recommender;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
 
@@ -14,6 +14,7 @@
   public RecommenderClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
@@ -24,15 +25,15 @@
     boolean clear(String name);
     Datum  complete_row_from_id(String name, String id);
     Datum  complete_row_from_datum(String name, Datum  row);
-    ArrayList<Tuple<String, Float > > similar_row_from_id(String name, String id, int size);
-    ArrayList<Tuple<String, Float > > similar_row_from_datum(String name, Datum  row, int size);
+    List<TupleStringFloat > similar_row_from_id(String name, String id, int size);
+    List<TupleStringFloat > similar_row_from_datum(String name, Datum  row, int size);
     Datum  decode_row(String name, String id);
-    ArrayList<String > get_all_rows(String name);
+    List<String > get_all_rows(String name);
     float calc_similarity(String name, Datum  lhs, Datum  rhs);
     float calc_l2norm(String name, Datum  row);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
 
   }
 
@@ -61,11 +62,11 @@
     return iface_.complete_row_from_datum(name, row);
   }
 
-  public ArrayList<Tuple<String, Float > > similar_row_from_id(String name, String id, int size) {
+  public List<TupleStringFloat > similar_row_from_id(String name, String id, int size) {
     return iface_.similar_row_from_id(name, id, size);
   }
 
-  public ArrayList<Tuple<String, Float > > similar_row_from_datum(String name, Datum  row, int size) {
+  public List<TupleStringFloat > similar_row_from_datum(String name, Datum  row, int size) {
     return iface_.similar_row_from_datum(name, row, size);
   }
 
@@ -73,7 +74,7 @@
     return iface_.decode_row(name, id);
   }
 
-  public ArrayList<String > get_all_rows(String name) {
+  public List<String > get_all_rows(String name) {
     return iface_.get_all_rows(name);
   }
 
@@ -93,7 +94,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
--- src/main/java/us/jubat/recommender/TupleStringDouble.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/recommender/TupleStringDouble.java	2013-03-06 11:59:20.112767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from recommender.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.recommender;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringDouble {
+  public String first;
+  public double second;
+};
+ 
+
--- src/main/java/us/jubat/recommender/TupleStringFloat.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/recommender/TupleStringFloat.java	2013-03-06 11:59:20.112767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from recommender.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.recommender;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringFloat {
+  public String first;
+  public float second;
+};
+ 
+
--- src/main/java/us/jubat/recommender/TupleStringString.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/recommender/TupleStringString.java	2013-03-06 11:59:20.112767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from recommender.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.recommender;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringString {
+  public String first;
+  public String second;
+};
+ 
+
--- src/main/java/us/jubat/regression/Datum.java	2013-03-06 11:58:28.556767001 +0900
+++ src/main/java/us/jubat/regression/Datum.java	2013-03-06 11:59:20.120767001 +0900
@@ -6,15 +6,15 @@
 package us.jubat.regression;
 
 
-import java.util.ArrayList;
+import java.util.List;
 import org.msgpack.MessagePack;
 import org.msgpack.annotation.Message;
 
 @Message
 public class Datum  {
 
-  public ArrayList<Tuple<String, String > > string_values;
-  public ArrayList<Tuple<String, Double > > num_values;
+  public List<TupleStringString > string_values;
+  public List<TupleStringDouble > num_values;
 
   public Datum() {
   
--- src/main/java/us/jubat/regression/RegressionClient.java	2013-03-06 11:58:28.556767001 +0900
+++ src/main/java/us/jubat/regression/RegressionClient.java	2013-03-06 11:59:20.120767001 +0900
@@ -5,8 +5,8 @@
 
 package us.jubat.regression;
 
-import java.util.HashMap;
-import java.util.ArrayList;
+import java.util.Map;
+import java.util.List;
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
 
@@ -14,17 +14,18 @@
   public RegressionClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
   public static interface RPCInterface {
     String get_config(String name);
-    int train(String name, ArrayList<Tuple<Float, Datum  > > train_data);
-    ArrayList<Float > estimate(String name, ArrayList<Datum  > estimate_data);
+    int train(String name, List<TupleFloatDatum > train_data);
+    List<Float > estimate(String name, List<Datum  > estimate_data);
     boolean clear(String name);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
 
   }
 
@@ -33,11 +34,11 @@
     return iface_.get_config(name);
   }
 
-  public int train(String name, ArrayList<Tuple<Float, Datum  > > train_data) {
+  public int train(String name, List<TupleFloatDatum > train_data) {
     return iface_.train(name, train_data);
   }
 
-  public ArrayList<Float > estimate(String name, ArrayList<Datum  > estimate_data) {
+  public List<Float > estimate(String name, List<Datum  > estimate_data) {
     return iface_.estimate(name, estimate_data);
   }
 
@@ -53,7 +54,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
--- src/main/java/us/jubat/regression/TupleFloatDatum.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/regression/TupleFloatDatum.java	2013-03-06 11:59:20.120767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from regression.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.regression;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleFloatDatum {
+  public float first;
+  public Datum  second;
+};
+ 
+
--- src/main/java/us/jubat/regression/TupleStringDouble.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/regression/TupleStringDouble.java	2013-03-06 11:59:20.120767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from regression.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.regression;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringDouble {
+  public String first;
+  public double second;
+};
+ 
+
--- src/main/java/us/jubat/regression/TupleStringString.java	1970-01-01 09:00:00.000000000 +0900
+++ src/main/java/us/jubat/regression/TupleStringString.java	2013-03-06 11:59:20.120767001 +0900
@@ -0,0 +1,17 @@
+
+// This file is auto-generated from regression.idl
+// *** DO NOT EDIT ***
+
+
+package us.jubat.regression;
+
+import org.msgpack.MessagePack;
+import org.msgpack.annotation.Message;
+
+@Message
+public class TupleStringString {
+  public String first;
+  public String second;
+};
+ 
+
--- src/main/java/us/jubat/stat/StatClient.java	2013-03-06 11:58:28.564767001 +0900
+++ src/main/java/us/jubat/stat/StatClient.java	2013-03-06 11:59:20.128767001 +0900
@@ -5,7 +5,7 @@
 
 package us.jubat.stat;
 
-import java.util.HashMap;
+import java.util.Map;
 
 import org.msgpack.rpc.Client;
 import org.msgpack.rpc.loop.EventLoop;
@@ -14,6 +14,7 @@
   public StatClient(String host, int port, double timeout_sec) throws Exception {
     EventLoop loop = EventLoop.defaultEventLoop();
     c_ = new Client(host, port, loop);
+    c_.setRequestTimeout((int) timeout_sec);
     iface_ = c_.proxy(RPCInterface.class);
   }
 
@@ -29,7 +30,7 @@
     boolean clear(String name);
     boolean save(String name, String id);
     boolean load(String name, String id);
-    HashMap<String, HashMap<String, String > > get_status(String name);
+    Map<String, Map<String, String > > get_status(String name);
 
   }
 
@@ -78,7 +79,7 @@
     return iface_.load(name, id);
   }
 
-  public HashMap<String, HashMap<String, String > > get_status(String name) {
+  public Map<String, Map<String, String > > get_status(String name) {
     return iface_.get_status(name);
   }
 
